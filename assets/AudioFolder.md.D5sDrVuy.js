import{_ as i,c as s,o as e,ae as l}from"./chunks/framework.BAoZ82iM.js";const u=JSON.parse('{"title":"七、 AudioFolder","description":"","frontmatter":{},"headers":[],"relativePath":"AudioFolder.md","filePath":"AudioFolder.md"}'),t={name:"AudioFolder.md"};function r(o,a,n,h,d,p){return e(),s("div",null,a[0]||(a[0]=[l(`<h1 id="七、-audiofolder" tabindex="-1">七、 AudioFolder <a class="header-anchor" href="#七、-audiofolder" aria-label="Permalink to &quot;七、 AudioFolder&quot;">​</a></h1><h2 id="一-直接解析" tabindex="-1">(一) 直接解析： <a class="header-anchor" href="#一-直接解析" aria-label="Permalink to &quot;(一) 直接解析：&quot;">​</a></h2><ol><li>文件夹必须符合类别标签格式：<br> dataset/ <br> ****train/ <br> ********speech/<br> ************speech1.wav<br> ************speech2.wav<br> ********music/<br> ************music1.wav<br> ************music2.wav<br> ****test/<br> ********speech/<br> ************speech3.wav<br> ********music/<br> ************music3.wav</li><li>支持常见音频格式： WAV, MP3, FLAC, AAC, OGG, M4A等格式</li><li>默认会生成ClassLabel：<br> dataset会自动根据文件夹名称创建ClassLabel</li></ol><h2 id="二-audiofolderconfig" tabindex="-1">(二) AudioFolderConfig: <a class="header-anchor" href="#二-audiofolderconfig" aria-label="Permalink to &quot;(二) AudioFolderConfig:&quot;">​</a></h2><ol><li>不使用类别标签，仅加载音频数据<br> drop_labels=True</li><li>不保留元数据，仅加载音频：<br> drop_metadata=True</li><li>手动定义features结构：</li></ol><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">features </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Features({</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;audio&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Audio(),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;label&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ClassLabel(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">names</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;speech&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;music&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;noise&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="三-例子和imagefolder类似" tabindex="-1">(三) 例子和ImageFolder类似 <a class="header-anchor" href="#三-例子和imagefolder类似" aria-label="Permalink to &quot;(三) 例子和ImageFolder类似&quot;">​</a></h2>`,7)]))}const c=i(t,[["render",r]]);export{u as __pageData,c as default};
